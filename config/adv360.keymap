
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &kp ESCAPE            &kp N1     &kp N2      &kp N3  &kp N4  &kp N5                &none                                                                           &none  &kp N6            &kp N7             &kp N8  &kp N9  &kp N0    &kp BACKSLASH
      &kp TAB  &kp SINGLE_QUOTE  &kp COMMA  &kp PERIOD   &kp P   &kp Y                &none                                                                           &none   &kp F             &kp G              &kp C   &kp R   &kp L        &kp SLASH
 &kp CAPSLOCK             &kp A      &kp O       &kp E   &kp U   &kp I                &none   &kp LEFT_ALT   &kp LWIN   &none   &none   &none  &kp RIGHT_CONTROL      &none   &kp D             &kp H              &kp T   &kp N   &kp S        &kp MINUS
    &kp LSHFT     &kp SEMICOLON      &kp Q       &kp J   &kp K   &kp X                &none          &none  &kp LCTRL   &none   &none   &none              &none      &none   &kp B             &kp M              &kp W   &kp V   &kp Z  &kp RIGHT_SHIFT
        &mo 1         &kp GRAVE      &none       &none   &none                    &kp SPACE  &kp BACKSPACE      &mo 2                   &none          &kp ENTER  &kp SPACE          &kp LEFT_BRACKET  &kp RIGHT_BRACKET   &none   &none            &none
            >;
        };

        layer_fn {
            bindings = <
 &kp F1        &kp F2        &kp F3        &kp F4      &kp F5  &kp F6             &none                                                   &none  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans        &trans        &trans        &trans      &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans        &trans        &trans        &trans      &trans  &trans             &none  &trans  &trans   &none   &none  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &trans  &trans             &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans        &trans        &trans        &trans  &bt BT_CLR                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_Yeyurr {
            bindings = <
      &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans     &trans          &trans          &trans           &trans  &trans  &trans
      &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans     &trans          &trans    &kp UP_ARROW           &trans  &trans  &trans
      &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp EQUAL  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
      &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans          &trans          &trans           &trans  &trans  &trans
 &bootloader  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans                     &trans          &trans           &trans  &trans  &trans
            >;
        };

    };
};
